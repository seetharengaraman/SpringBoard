2022-05-31 15:53:49 bank_data_store root.database_setup +58: INFO [65562] Connected to create tables!
2022-05-31 15:53:49 bank_data_store root.database_setup +168: ERROR [65562] (pymysql.err.OperationalError) (1051, "Unknown table 'banking_system.customeraccountdetail'")
[SQL: 
DROP TABLE `CustomerAccountDetail`]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1808, in _execute_context
    self.dialect.do_execute(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1051, "Unknown table 'banking_system.customeraccountdetail'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/setup/bank_data_store.py", line 165, in database_setup
    metadata_obj.drop_all(db_engine,checkfirst=False)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/schema.py", line 4893, in drop_all
    bind._run_ddl_visitor(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3123, in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2119, in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/visitors.py", line 524, in traverse_single
    return meth(obj, **kw)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/ddl.py", line 1023, in visit_metadata
    self.traverse_single(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/visitors.py", line 524, in traverse_single
    return meth(obj, **kw)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/ddl.py", line 1100, in visit_table
    self.connection.execute(DropTable(table))
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1295, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/ddl.py", line 80, in _execute_on_connection
    return connection._execute_ddl(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1387, in _execute_ddl
    ret = self._execute_context(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1851, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2032, in _handle_dbapi_exception
    util.raise_(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
    raise exception
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1808, in _execute_context
    self.dialect.do_execute(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1051, "Unknown table 'banking_system.customeraccountdetail'")
[SQL: 
DROP TABLE `CustomerAccountDetail`]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
2022-05-31 15:53:49 bank_transaction root.__init__ +28: ERROR [65562] (pymysql.err.IntegrityError) (1062, "Duplicate entry 'E000000001' for key 'employees.PRIMARY'")
[SQL: INSERT INTO `Employees` (`Id`, `FirstName`, `LastName`, `AddressLine1`, `AddressLine2`, `City`, `State`, `PostalCode`, `Country`, `ServiceHandled`, `HandlesHomeLoan`, `HandlesPersonalLoan`, `HandlesBusinessLoan`, `CreatedBy`, `UpdatedBy`) VALUES (%(Id)s, %(FirstName)s, %(LastName)s, %(AddressLine1)s, %(AddressLine2)s, %(City)s, %(State)s, %(PostalCode)s, %(Country)s, %(ServiceHandled)s, %(HandlesHomeLoan)s, %(HandlesPersonalLoan)s, %(HandlesBusinessLoan)s, %(CreatedBy)s, %(UpdatedBy)s)]
[parameters: ({'Id': 'E000000001', 'FirstName': 'John', 'LastName': 'Smith', 'AddressLine1': 'Windy Ridge Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Account Maintenance', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000002', 'FirstName': 'Kate', 'LastName': 'Winslet', 'AddressLine1': 'Peachtree Pkwy', 'AddressLine2': None, 'City': 'Cumming', 'State': 'GA', 'PostalCode': 30041, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000003', 'FirstName': 'Jack', 'LastName': 'Dawson', 'AddressLine1': 'Warbler Way', 'AddressLine2': None, 'City': 'Dunwoody', 'State': 'GA', 'PostalCode': 30320, 'Country': 'US', 'ServiceHandled': 'Credit Cards', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000004', 'FirstName': 'Jennifer', 'LastName': 'Templeton', 'AddressLine1': 'Ronald Regan Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000005', 'FirstName': 'Pharren', 'LastName': 'Lowther', 'AddressLine1': 'Medlock Crossing', 'AddressLine2': None, 'City': 'Suwanee', 'State': 'GA', 'PostalCode': 30024, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1788, in _execute_context
    self.dialect.do_executemany(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/dialects/mysql/mysqldb.py", line 193, in do_executemany
    rowcount = cursor.executemany(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 173, in executemany
    return self._do_execute_many(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 211, in _do_execute_many
    rows += self.execute(sql + postfix)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry 'E000000001' for key 'employees.PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/bank_transaction.py", line 22, in __init__
    bank_setup.insert_data('Employees',self.db_engine)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/setup/bank_data_store.py", line 176, in insert_data
    df.to_sql(table_name,db_engine,if_exists='append')
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/core/generic.py", line 2951, in to_sql
    return sql.to_sql(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 697, in to_sql
    return pandas_sql.to_sql(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 1739, in to_sql
    total_inserted = sql_engine.insert_records(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 1332, in insert_records
    raise err
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 1322, in insert_records
    return table.insert(chunksize=chunksize, method=method)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 950, in insert
    num_inserted = exec_insert(conn, keys, chunk_iter)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 857, in _execute_insert
    result = conn.execute(self.table.insert(), data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1295, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1487, in _execute_clauseelement
    ret = self._execute_context(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1851, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2032, in _handle_dbapi_exception
    util.raise_(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
    raise exception
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1788, in _execute_context
    self.dialect.do_executemany(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/dialects/mysql/mysqldb.py", line 193, in do_executemany
    rowcount = cursor.executemany(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 173, in executemany
    return self._do_execute_many(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 211, in _do_execute_many
    rows += self.execute(sql + postfix)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry 'E000000001' for key 'employees.PRIMARY'")
[SQL: INSERT INTO `Employees` (`Id`, `FirstName`, `LastName`, `AddressLine1`, `AddressLine2`, `City`, `State`, `PostalCode`, `Country`, `ServiceHandled`, `HandlesHomeLoan`, `HandlesPersonalLoan`, `HandlesBusinessLoan`, `CreatedBy`, `UpdatedBy`) VALUES (%(Id)s, %(FirstName)s, %(LastName)s, %(AddressLine1)s, %(AddressLine2)s, %(City)s, %(State)s, %(PostalCode)s, %(Country)s, %(ServiceHandled)s, %(HandlesHomeLoan)s, %(HandlesPersonalLoan)s, %(HandlesBusinessLoan)s, %(CreatedBy)s, %(UpdatedBy)s)]
[parameters: ({'Id': 'E000000001', 'FirstName': 'John', 'LastName': 'Smith', 'AddressLine1': 'Windy Ridge Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Account Maintenance', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000002', 'FirstName': 'Kate', 'LastName': 'Winslet', 'AddressLine1': 'Peachtree Pkwy', 'AddressLine2': None, 'City': 'Cumming', 'State': 'GA', 'PostalCode': 30041, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000003', 'FirstName': 'Jack', 'LastName': 'Dawson', 'AddressLine1': 'Warbler Way', 'AddressLine2': None, 'City': 'Dunwoody', 'State': 'GA', 'PostalCode': 30320, 'Country': 'US', 'ServiceHandled': 'Credit Cards', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000004', 'FirstName': 'Jennifer', 'LastName': 'Templeton', 'AddressLine1': 'Ronald Regan Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000005', 'FirstName': 'Pharren', 'LastName': 'Lowther', 'AddressLine1': 'Medlock Crossing', 'AddressLine2': None, 'City': 'Suwanee', 'State': 'GA', 'PostalCode': 30024, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
2022-05-31 15:54:12 bank_data_store root.database_setup +58: INFO [65586] Connected to create tables!
2022-05-31 15:54:12 bank_data_store root.database_setup +168: ERROR [65586] (pymysql.err.OperationalError) (1051, "Unknown table 'banking_system.customeraccountdetail'")
[SQL: 
DROP TABLE `CustomerAccountDetail`]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1808, in _execute_context
    self.dialect.do_execute(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1051, "Unknown table 'banking_system.customeraccountdetail'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/setup/bank_data_store.py", line 165, in database_setup
    metadata_obj.drop_all(db_engine,checkfirst=False)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/schema.py", line 4893, in drop_all
    bind._run_ddl_visitor(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3123, in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2119, in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/visitors.py", line 524, in traverse_single
    return meth(obj, **kw)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/ddl.py", line 1023, in visit_metadata
    self.traverse_single(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/visitors.py", line 524, in traverse_single
    return meth(obj, **kw)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/ddl.py", line 1100, in visit_table
    self.connection.execute(DropTable(table))
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1295, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/ddl.py", line 80, in _execute_on_connection
    return connection._execute_ddl(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1387, in _execute_ddl
    ret = self._execute_context(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1851, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2032, in _handle_dbapi_exception
    util.raise_(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
    raise exception
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1808, in _execute_context
    self.dialect.do_execute(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1051, "Unknown table 'banking_system.customeraccountdetail'")
[SQL: 
DROP TABLE `CustomerAccountDetail`]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
2022-05-31 15:54:12 bank_transaction root.__init__ +28: ERROR [65586] (pymysql.err.IntegrityError) (1062, "Duplicate entry 'E000000001' for key 'employees.PRIMARY'")
[SQL: INSERT INTO `Employees` (`Id`, `FirstName`, `LastName`, `AddressLine1`, `AddressLine2`, `City`, `State`, `PostalCode`, `Country`, `ServiceHandled`, `HandlesHomeLoan`, `HandlesPersonalLoan`, `HandlesBusinessLoan`, `CreatedBy`, `UpdatedBy`) VALUES (%(Id)s, %(FirstName)s, %(LastName)s, %(AddressLine1)s, %(AddressLine2)s, %(City)s, %(State)s, %(PostalCode)s, %(Country)s, %(ServiceHandled)s, %(HandlesHomeLoan)s, %(HandlesPersonalLoan)s, %(HandlesBusinessLoan)s, %(CreatedBy)s, %(UpdatedBy)s)]
[parameters: ({'Id': 'E000000001', 'FirstName': 'John', 'LastName': 'Smith', 'AddressLine1': 'Windy Ridge Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Account Maintenance', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000002', 'FirstName': 'Kate', 'LastName': 'Winslet', 'AddressLine1': 'Peachtree Pkwy', 'AddressLine2': None, 'City': 'Cumming', 'State': 'GA', 'PostalCode': 30041, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000003', 'FirstName': 'Jack', 'LastName': 'Dawson', 'AddressLine1': 'Warbler Way', 'AddressLine2': None, 'City': 'Dunwoody', 'State': 'GA', 'PostalCode': 30320, 'Country': 'US', 'ServiceHandled': 'Credit Cards', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000004', 'FirstName': 'Jennifer', 'LastName': 'Templeton', 'AddressLine1': 'Ronald Regan Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000005', 'FirstName': 'Pharren', 'LastName': 'Lowther', 'AddressLine1': 'Medlock Crossing', 'AddressLine2': None, 'City': 'Suwanee', 'State': 'GA', 'PostalCode': 30024, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1788, in _execute_context
    self.dialect.do_executemany(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/dialects/mysql/mysqldb.py", line 193, in do_executemany
    rowcount = cursor.executemany(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 173, in executemany
    return self._do_execute_many(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 211, in _do_execute_many
    rows += self.execute(sql + postfix)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry 'E000000001' for key 'employees.PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/bank_transaction.py", line 22, in __init__
    bank_setup.insert_data('Employees',self.db_engine)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/setup/bank_data_store.py", line 176, in insert_data
    df.to_sql(table_name,db_engine,if_exists='append')
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/core/generic.py", line 2951, in to_sql
    return sql.to_sql(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 697, in to_sql
    return pandas_sql.to_sql(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 1739, in to_sql
    total_inserted = sql_engine.insert_records(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 1332, in insert_records
    raise err
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 1322, in insert_records
    return table.insert(chunksize=chunksize, method=method)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 950, in insert
    num_inserted = exec_insert(conn, keys, chunk_iter)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pandas/io/sql.py", line 857, in _execute_insert
    result = conn.execute(self.table.insert(), data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1295, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1487, in _execute_clauseelement
    ret = self._execute_context(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1851, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2032, in _handle_dbapi_exception
    util.raise_(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
    raise exception
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1788, in _execute_context
    self.dialect.do_executemany(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/sqlalchemy/dialects/mysql/mysqldb.py", line 193, in do_executemany
    rowcount = cursor.executemany(statement, parameters)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 173, in executemany
    return self._do_execute_many(
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 211, in _do_execute_many
    rows += self.execute(sql + postfix)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/renga/Documents/SpringBoard Data Engineering Course/SpringBoard/Banking Mini Project/bankingEnv/lib/python3.8/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry 'E000000001' for key 'employees.PRIMARY'")
[SQL: INSERT INTO `Employees` (`Id`, `FirstName`, `LastName`, `AddressLine1`, `AddressLine2`, `City`, `State`, `PostalCode`, `Country`, `ServiceHandled`, `HandlesHomeLoan`, `HandlesPersonalLoan`, `HandlesBusinessLoan`, `CreatedBy`, `UpdatedBy`) VALUES (%(Id)s, %(FirstName)s, %(LastName)s, %(AddressLine1)s, %(AddressLine2)s, %(City)s, %(State)s, %(PostalCode)s, %(Country)s, %(ServiceHandled)s, %(HandlesHomeLoan)s, %(HandlesPersonalLoan)s, %(HandlesBusinessLoan)s, %(CreatedBy)s, %(UpdatedBy)s)]
[parameters: ({'Id': 'E000000001', 'FirstName': 'John', 'LastName': 'Smith', 'AddressLine1': 'Windy Ridge Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Account Maintenance', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000002', 'FirstName': 'Kate', 'LastName': 'Winslet', 'AddressLine1': 'Peachtree Pkwy', 'AddressLine2': None, 'City': 'Cumming', 'State': 'GA', 'PostalCode': 30041, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000003', 'FirstName': 'Jack', 'LastName': 'Dawson', 'AddressLine1': 'Warbler Way', 'AddressLine2': None, 'City': 'Dunwoody', 'State': 'GA', 'PostalCode': 30320, 'Country': 'US', 'ServiceHandled': 'Credit Cards', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000004', 'FirstName': 'Jennifer', 'LastName': 'Templeton', 'AddressLine1': 'Ronald Regan Pkwy', 'AddressLine2': None, 'City': 'Atlanta', 'State': 'GA', 'PostalCode': 30339, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 0, 'HandlesPersonalLoan': 1, 'HandlesBusinessLoan': 0, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'}, {'Id': 'E000000005', 'FirstName': 'Pharren', 'LastName': 'Lowther', 'AddressLine1': 'Medlock Crossing', 'AddressLine2': None, 'City': 'Suwanee', 'State': 'GA', 'PostalCode': 30024, 'Country': 'US', 'ServiceHandled': 'Loans', 'HandlesHomeLoan': 1, 'HandlesPersonalLoan': 0, 'HandlesBusinessLoan': 1, 'CreatedBy': 'E000000001', 'UpdatedBy': 'E000000001'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
